// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.ReadStore.EF;
using ToDo.Store;

namespace ToDo.Store.Migrations
{
    [DbContext(typeof(ToDoContext))]
    [Migration("20210607080500_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDo.ReadStore.EF.ToDo.ToDoItemModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToDoReadModelListId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ToDoReadModelListId");

                    b.ToTable("ToDoItemModel");
                });

            modelBuilder.Entity("ToDo.ReadStore.EF.ToDo.ToDoReadModel", b =>
                {
                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ListName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ListId");

                    b.ToTable("ToDoReadModel");
                });

            modelBuilder.Entity("ToDo.ReadStore.EF.ToDo.ToDoItemModel", b =>
                {
                    b.HasOne("ToDo.ReadStore.EF.ToDo.ToDoReadModel", null)
                        .WithMany("ToDoItems")
                        .HasForeignKey("ToDoReadModelListId");
                });

            modelBuilder.Entity("ToDo.ReadStore.EF.ToDo.ToDoReadModel", b =>
                {
                    b.Navigation("ToDoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
