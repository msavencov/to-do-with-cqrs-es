@using Microsoft.Extensions.Logging
@inject ILogger<Error> Logger

<CascadingValue Value=this>
    @ChildContent
</CascadingValue>

<div style="position: absolute; left: 0; bottom: 0">
    @if (Exception is {} exception)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
          @exception.Message
          <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
    }
</div>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private Exception Exception;
    
    public void ProcessError(Exception exception)
    {
        Logger.LogError("UI Error: Message: {UIErrorMessage} {UIErrorTrace}", exception.GetType(), exception.ToString());
        Exception = exception;
    }
}