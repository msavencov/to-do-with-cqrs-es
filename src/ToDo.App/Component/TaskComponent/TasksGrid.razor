@using ToDo.Api.Contract.Tasks

@if (ListId == null)
{
    return;
}

<ApiCallWrapper TService="TasksService.TasksServiceClient" @ref="TaskApiWrapper" />

<RadzenContent>
    <RadzenButton Click="@AddTaskClick" ButtonStyle="ButtonStyle.Success" Icon="add">Add New Task</RadzenButton>
</RadzenContent>

<RadzenDataGrid TItem="TaskItem" @ref="@Grid"
                Count="@(Tasks?.Page.TotalRows ?? 0)" Data="@(Tasks?.Items)" LoadData="OnLoadData"
                AllowPaging="true" PageSize="10" class="mt-2">
    <Columns>
        <RadzenDataGridColumn TItem="TaskItem" Property="CreatedAt" Title="Created At" Width="150px">
            <Template Context="item">
                @item.CreatedAt.ToDateTime().ToString("yyyy, MMM dd (HH:mm)")
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="TaskItem" Property="CreatedBy" Title="Created By" Width="150px"/>
        <RadzenDataGridColumn TItem="TaskItem" Title="Task">
            <Template Context="item">
                <p style="overflow: auto; white-space: initial;">
                    @item.Title
                </p>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="TaskItem">
            <Template Context="item">
                @if (item.IsCompleted == false)
                {
                    <RadzenButton Text="Done" Click="() => TaskItemDone(item)" ButtonStyle="ButtonStyle.Primary"/>
                    
                    @if (item.IsDeleted == false)
                    {
                        <RadzenButton Text="Delete" Click="() => TaskItemDelete(item)" ButtonStyle="ButtonStyle.Danger"/>
                    }
                }
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>